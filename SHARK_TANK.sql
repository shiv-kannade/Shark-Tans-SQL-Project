CREATE DATABASE SHARK_TANK ;

USE SHARK_TANK

SELECT * FROM DATA ;

--1) TOTAL NUMBER OF EPISODE 

SELECT COUNT(DISTINCT(EP_NO)) AS TOTAL_EPISODE FROM DATA  ;

-- 2) HOW MANU BRANDS CAME 

SELECT COUNT(DISTINCT(BRAND)) AS TOTAL_BRANDS FROM DATA 


--3) BRANDS  GET FUNDING 

SELECT  COUNT(DISTINCT(BRAND)) AS FUNDING_BRAND FROM DATA 
WHERE DEAL != 'NO DEAL' ; 

--4) % OF BRAND FUNDING 
SELECT  COUNT(*) AS TOTAL_BRAND , SUM(FUNDING_BRAND) AS FUNDED_BRAND ,(CAST(SUM(FUNDING_BRAND) AS FLOAT) / CAST(COUNT(*) AS FLOAT))*100 AS CONVERTING_PERCEN FROM
(
SELECT [Amount Invested lakhs] ,  CASE WHEN [Amount Invested lakhs] > 0 THEN 1 ELSE 0 END AS FUNDING_BRAND FROM DATA ) A ;

--5) TOTAL NUMBER OF MALE  PARTICIPAENT 
SELECT SUM(MALE) AS TOTAL_MALE_PARTI  FROM DATA 

--FEMALE 
SELECT SUM(FEMALE) AS TOTAL_MALE_PARTI  FROM DATA 

--GENDER RATO 
SELECT SUM(FEMALE) / SUM(MALE) AS GENDER_RATO FROM DATA ;


---6) TOTAL INVESTED AMOUNT 
SELECT SUM([Amount Invested lakhs]) AS TOTAL_INVESTMENT_IN_LAKHS FROM DATA ;

---7) AVG EQUTIY TAKEN 

SELECT AVG(A.[Equity Taken %]) AS AVG_EQUTY FROM
(SELECT * FROM DATA WHERE [Equity Taken %]>0) A ;

---8) HIGHEST DEAL TAKEN 

SELECT MAX([Amount Invested lakhs])  AS MAX_INVESTMENT  FROM DATA 

--9) HIGHEST EQUTY 
SELECT MAX([Equity Taken %]) AS MAX_EQUITY_TAKEN FROM DATA ;

--10) FIND THE BRANDS WHERE ATLEAST 1 WOMEN PARTICIPATED 

SELECT * FROM DATA 
WHERE FEMALE != 0 ;

--11) BRANDS CONVERTED WHERE ATLEAST 1 WOMEN PARTICPATE 

SELECT * FROM DATA 
WHERE FEMALE != 0 AND [Amount Invested lakhs] > 0 ;


--12) AVG TEAM MEMBERS IN EACH BRANDS 

SELECT AVG([Team members]) AS AVG_TEAM_MEMBER FROM DATA ;

--13)  AVG AMOUNT INVESTED IN PER DEAL

SELECT AVG([Amount Invested lakhs]) AS AVG_AMOUNT_LAKHS FROM DATA 
WHERE [Amount Invested lakhs] > 0 ;


--14) FROM WHICH AGE GROUP MOST ENTERPRENUR COMING 

SELECT  [Avg age] , COUNT([Avg age])  AS TOTAL_PERSON FROM DATA
GROUP BY [Avg age] 
ORDER BY COUNT([Avg age]) DESC ;


--15) FROM WHICH LOCATION MAXIMUM CONTENSTION ARE COMING 

SELECT LOCATION , COUNT(LOCATION) AS TOTAL_PERSON FROM DATA 
GROUP BY LOCATION 
ORDER BY COUNT(LOCATION) DESC ;

--16) FROM WHICH SECTOR  MAXIMUM CONTENSTION ARE COMING 

SELECT [Sector] , COUNT([Sector]) AS TOTAL_PERSON FROM DATA 
GROUP BY [Sector] 
ORDER BY COUNT([Sector]) DESC ;

--17) PARTNER DEALS 


SELECT PARTNERS , COUNT(PARTNERS) AS TOTAL_DEALS 
FROM DATA 
WHERE PARTNERS != '-' 
GROUP BY PARTNERS 
ORDER BY COUNT(PARTNERS) DESC ;

--18) CALCULATE THE TOTAL AMOUNT INVESTED , AVG EQUTY TAKEN , TOTAL EPISODE ,TOTAL DELAS PER SHARK

SELECT 'ASHNEER' AS KEYY , COUNT([Amount Invested lakhs]) AS TOTAL_EPISODE FROM DATA WHERE [Ashneer Amount Invested] IS NOT NULL;

SELECT 'ASHNEER' AS KEYY , COUNT([Amount Invested lakhs]) AS TOTAL_DEALS FROM DATA WHERE [Ashneer Amount Invested] IS NOT NULL AND [Ashneer Amount Invested] != 0 ;


SELECT 'ASHNEER' AS KEYY , SUM([Ashneer Amount Invested]) AS TOTAL_INVESTMENT , AVG([Ashneer Equity Taken %]) AS AVG_EQUITY_TAKEN FROM DATA 
WHERE [Ashneer Equity Taken %] IS NOT NULL  AND [Ashneer Equity Taken %] != 0 ;


SELECT A.KEYY , A.TOTAL_EPISODE , B.TOTAL_DEAL , C. TOTAL_INVESTMENT , C.AVG_EQUITY_TAKEN FROM 
(
SELECT 'ASHNEER' AS KEYY , COUNT([Amount Invested lakhs]) AS TOTAL_EPISODE FROM DATA WHERE [Ashneer Amount Invested] IS NOT NULL) A
INNER JOIN 
(SELECT 'ASHNEER' AS KEYY , COUNT([Amount Invested lakhs]) AS TOTAL_DEAL FROM DATA WHERE [Ashneer Amount Invested] IS NOT NULL AND [Ashneer Amount Invested] != 0 ) B
ON A.KEYY = B.KEYY 
INNER JOIN 
(SELECT 'ASHNEER' AS KEYY , SUM([Ashneer Amount Invested]) AS TOTAL_INVESTMENT , AVG([Ashneer Equity Taken %]) AS AVG_EQUITY_TAKEN FROM DATA 
WHERE [Ashneer Equity Taken %] IS NOT NULL  AND [Ashneer Equity Taken %] != 0 ) C
ON B.KEYY = C.KEYY ;





---19) WHICH SECTOR HAS HIGHEST AMOUNT INVESTED 

SELECT BRAND , SECTOR , [Amount Invested lakhs] , RANK() OVER(PARTITION BY SECTOR ORDER BY [Amount Invested lakhs] DESC) AS RANKS
 FROM DATA ; 


 




 




















